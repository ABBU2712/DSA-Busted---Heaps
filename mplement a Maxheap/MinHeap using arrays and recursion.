#Given an array of N elements. The task is to build a Binary Heap from the given array. The heap can be either Max Heap or Min Heap.
def heapify(arr, n, i):
  
    largest = i; # Initialize largest as root
    l = 2 * i + 1; # left = 2*i + 1
    r = 2 * i + 2; # right = 2*i + 2
  
    # If left child is larger than root
    if l < n and arr[l] > arr[largest]:
        largest = l;
  
    # If right child is larger than largest so far
    if r < n and arr[r] > arr[largest]:
        largest = r;
  
    # If largest is not root
    if largest != i:
        arr[i], arr[largest] = arr[largest], arr[i];
  
        # Recursively heapify the affected sub-tree
        heapify(arr, n, largest);
def buildHeap(arr, n):
  
    # Index of last non-leaf node
    startIdx = n // 2 - 1;
  
    # Perform reverse level order traversal
    # from last non-leaf node and heapify
    # each node
    for i in range(startIdx, -1, -1):
        heapify(arr, n, i);
def printHeap(arr, n):
    print("Array representation of Heap is:");
  
    for i in range(n):
        print(arr[i], end = " ");
    print();
